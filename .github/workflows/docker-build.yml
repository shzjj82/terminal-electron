name: Build and Push Docker Image to Aliyun

on:
  push:
    branches: [main]
  workflow_dispatch:
    inputs:
      image_tag:
        description: 'Custom image tag (optional)'
        required: false
        default: ''

env:
  # ‰øÆÊîπ‰∏∫‰Ω†ÁöÑÈòøÈáå‰∫ëÈïúÂÉè‰ªìÂ∫ìÂú∞ÂùÄ
  REGISTRY: registry.cn-shanghai.aliyuncs.com
  # ‰øÆÊîπ‰∏∫‰Ω†ÁöÑÂëΩÂêçÁ©∫Èó¥/‰ªìÂ∫ìÂêç
  IMAGE_NAME: my_docker-hub/terminal

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          driver-opts: |
            image=moby/buildkit:v0.12.0
          platforms: linux/amd64,linux/arm64

      - name: Log in to Aliyun Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ secrets.ALIYUN_USERNAME }}
          password: ${{ secrets.ALIYUN_PASSWORD }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=sha,prefix={{branch}}-
            type=raw,value=latest,enable={{is_default_branch}}
            type=raw,value=${{ github.event.inputs.image_tag }},enable=${{ github.event.inputs.image_tag != '' }}

      - name: Build and push Docker image (Attempt 1)
        id: build-attempt-1
        uses: docker/build-push-action@v5
        continue-on-error: true
        with:
          context: ./apps/service
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          platforms: linux/amd64,linux/arm64
          build-args: |
            NODE_ENV=production
            BUILD_DATE=${{ github.event.head_commit.timestamp }}
            VCS_REF=${{ github.sha }}
          provenance: false
          sbom: false

      - name: Build and push Docker image (Attempt 2)
        if: steps.build-attempt-1.outcome == 'failure'
        id: build-attempt-2
        uses: docker/build-push-action@v5
        continue-on-error: true
        with:
          context: ./apps/service
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          platforms: linux/amd64,linux/arm64
          build-args: |
            NODE_ENV=production
            BUILD_DATE=${{ github.event.head_commit.timestamp }}
            VCS_REF=${{ github.sha }}
          provenance: false
          sbom: false

      - name: Build and push Docker image (Final Attempt)
        if: steps.build-attempt-1.outcome == 'failure' && steps.build-attempt-2.outcome == 'failure'
        uses: docker/build-push-action@v5
        with:
          context: ./apps/service
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          platforms: linux/amd64,linux/arm64
          build-args: |
            NODE_ENV=production
            BUILD_DATE=${{ github.event.head_commit.timestamp }}
            VCS_REF=${{ github.sha }}
          provenance: false
          sbom: false

      - name: Output image info
        run: |
          if [ "${{ steps.build-attempt-1.outcome }}" == "success" ]; then
            echo "‚úÖ Successfully built and pushed images on first attempt:"
            echo "${{ steps.meta.outputs.tags }}"
          elif [ "${{ steps.build-attempt-2.outcome }}" == "success" ]; then
            echo "‚úÖ Successfully built and pushed images on second attempt:"
            echo "${{ steps.meta.outputs.tags }}"
          elif [ "${{ steps.build-attempt-1.outcome }}" == "failure" ] && [ "${{ steps.build-attempt-2.outcome }}" == "failure" ]; then
            echo "‚ö†Ô∏è  Build failed on first two attempts, trying final attempt..."
          else
            echo "‚úÖ Successfully built and pushed images:"
            echo "${{ steps.meta.outputs.tags }}"
          fi
          echo ""
          echo "üì¶ Image details:"
          echo "Registry: ${{ env.REGISTRY }}"
          echo "Repository: ${{ env.IMAGE_NAME }}"
          echo "Commit SHA: ${{ github.sha }}"
          echo "Branch: ${{ github.ref_name }}"

      - name: Notify on failure
        if: failure()
        run: |
          echo "‚ùå Docker build failed after all attempts!"
          echo "This might be due to Docker Hub service issues."
          echo "Check the logs above for more details."
          echo ""
          echo "üí° Possible solutions:"
          echo "1. Wait a few minutes and retry manually"
          echo "2. Check Docker Hub status: https://status.docker.com/"
          echo "3. Try building locally with: docker build -t test ./apps/service"
